


===============================================================================

Ensure you have defined root_url to *something* in your config/routes.rb.
  For example:

    root to: "home#index"

1. Ensure you have defined default url options in your environments files. Here
    is an example of default_url_options appropriate for a development environment
    in config/environments/development.rb:

      config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }
      
    In production, :host should be set to the actual host of your application.

2. Add the following lines in app/views/layouts/application.html.erb.

    <%= render partial: "auth_m/layouts/nav_bar"%>

3. Add the following lines in app/assets/javascripts/application.js

    //= require auth_m

4. Add the following lines in app/assets/stylesheets/application.css

    *= require auth_m

5. Add the following lines in app/controllers/application_controller.rb:

    before_action :authenticate_user!

    protect_from_forgery with: :exception
    
    before_action :configure_permitted_parameters, if: :devise_controller?
    before_action :set_up_session

    helper_method :current_management, :user_signed_in?
    helper_method :current_branch, :user_signed_in?

    rescue_from ActionController::InvalidAuthenticityToken do |exception|   
      redirect_to auth_m.new_user_session_path, alert: "Invalid Authenticity Token"
    end 

    rescue_from CanCan::AccessDenied do |exception|
      respond_to do |format|
        format.json { head :forbidden, content_type: 'text/html' }
        format.html { redirect_to main_app.root_url, notice: exception.message }
        format.js   { head :forbidden, content_type: 'text/html' }
      end
    end

    def set_up_session
      set_sesssion if user_signed_in? && session[:management_id].nil? && session[:branch_id].nil?
    end

    def after_sign_in_path_for(resource)
      main_app.root_path
    end

    def after_sign_out_path_for(resource)
      main_app.root_path
    end
    
    def current_ability
      @current_ability ||= AuthM::Ability.new(current_user, current_branch)
    end

    def current_branch
      current_management.branches.where(id:session[:branch_id]).first if current_management
    end 

    def current_management
      AuthM::Management.where(id: session[:management_id]).first
    end 

    def set_current_branch(id)
      session[:branch_id] = id if current_management && current_management.branches.exists?(id) 
    end

    def set_current_management(id)
      if AuthM::Management.exists? id
        session[:management_id] = id 
        set_current_branch(current_management.branches.first.id) unless current_management.branches.empty?
      end
    end

    impersonates :user

    private 

      def set_sesssion
        if (current_user.has_role? :root) && !(AuthM::Management.first.nil?)
          session[:management_id] = AuthM::Management.first.id 
          session[:branch_id] = current_management.branches.first.id unless current_management.branches.empty?
        elsif current_user.has_role? :user
          session[:management_id] = current_user.management.id
          session[:branch_id] = current_user.policy_groups.first.branch.id unless current_user.policy_groups.empty?
        end
      end

    protected

      def configure_permitted_parameters
        added_attrs = [:username, :email, :password, :password_confirmation, :remember_me]
        devise_parameter_sanitizer.permit :sign_up, keys: added_attrs
        devise_parameter_sanitizer.permit :account_update, keys: added_attrs
      end

6. Add the following lines in app/config/secrets.yml:

    FACEBOOK_KEY: -- key --
    FACEBOOK_SECRET: -- key --

    GOOGLE_KEY: -- key --
    GOOGLE_SECRET: -- key --

    TWITTER_KEY: -- key --
    TWITTER_SECRET: -- key --

    RECAPTCHA_SITE_KEY: -- key -- 
    RECAPTCHA_SECRET_KEY: -- key --
        
7 (OPTIONAL). Add the following lines in app/db/seeds.rb:

    AuthM::Engine.load_seed

===============================================================================


